name: Testing builds
on:
#  push:
#    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - name: Maximizing build space
        uses: easimon/maximize-build-space@master
        with:
          temp-reserve-mb: 11264
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Installing dependencies
        run: sudo apt-get install -y cgpt vboot-kernel-utils parted

      - name: Copy testing script to root
        run: cp ./.github/repo-scripts/build-tests/ubuntu-test.py ubuntu-test.py

      - name: Testing Ubuntu builds
        run: python3 ./ubuntu-test.py

      - name: Uploading results as artifact
        uses: actions/upload-artifact@v2
        with:
          name: results-ubuntu
          retention-days: 1
          path: |
            results.txt

  test-debian:
    runs-on: ubuntu-22.04
    steps:
      - name: Maximizing build space
        uses: easimon/maximize-build-space@master
        with:
          temp-reserve-mb: 11264
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Installing dependencies
        run: sudo apt-get install -y cgpt vboot-kernel-utils parted debootstrap

      - name: Copy testing script to root
        run: cp ./.github/repo-scripts/build-tests/debian-test.py debian-test.py

      - name: Testing Debian builds
        run: python3 ./debian-test.py

      - name: Uploading results as artifact
        uses: actions/upload-artifact@v2
        with:
          name: results-debian
          retention-days: 1
          path: |
            results.txt

  test-arch:
    runs-on: ubuntu-22.04
    steps:
      - name: Maximizing build space
        uses: easimon/maximize-build-space@master
        with:
          temp-reserve-mb: 11264
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Installing dependencies
        run: sudo apt-get install -y cgpt vboot-kernel-utils parted arch-install-scripts

      - name: Copy testing script to root
        run: cp ./.github/repo-scripts/build-tests/arch-test.py arch-test.py

      - name: Testing Arch builds
        run: python3 ./arch-test.py

      - name: Uploading results as artifact
        uses: actions/upload-artifact@v2
        with:
          name: results-arch
          retention-days: 1
          path: |
            results.txt

  test-fedora:
    runs-on: ubuntu-22.04
    steps:
      - name: Maximizing build space
        uses: easimon/maximize-build-space@master
        with:
          temp-reserve-mb: 11264
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Installing dependencies
        run: sudo apt-get install -y cgpt vboot-kernel-utils parted

      - name: Copy testing script to root
        run: cp ./.github/repo-scripts/build-tests/fedora-test.py fedora-test.py

      - name: Testing Fedora builds
        run: python3 ./fedora-test.py

      - name: Uploading results as artifact
        uses: actions/upload-artifact@v2
        with:
          name: results-fedora
          retention-days: 1
          path: |
            results.txt

  # PopOS times out the container
  # Perhaps unsquashfs is taking too long?
  #TODO: fix popos
  #
  #  test-popos:
  #    runs-on: ubuntu-22.04
  #    steps:
  #      - name: Maximizing build space
  #        uses: easimon/maximize-build-space@master
  #        with:
  #          temp-reserve-mb: 11264
  #          swap-size-mb: 1
  #          remove-dotnet: 'true'
  #          remove-android: 'true'
  #          remove-haskell: 'true'
  #
  #      - name: Checking out repository code
  #        uses: actions/checkout@v3
  #        with:
  #          fetch-depth: 1
  #
  #      - name: Installing dependencies
  #        run: sudo apt-get install -y cgpt vboot-kernel-utils parted squashfs-tools
  #
  #      - name: Copy testing script to root
  #        run: cp ./.github/repo-scripts/build-tests/popos-test.py popos-test.py
  #
  #      - name: Testing PopOS build
  #        run: python3 ./popos-test.py
  #
  #      - name: Uploading results as artifact
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: results-popos
  #          retention-days: 1
  #          path: |
  #            results.txt

  evaluate-results:
    # needs: [ test-ubuntu, test-debian, test-arch, test-fedora, test-popos ]
    needs: [ test-ubuntu, test-debian, test-arch, test-fedora ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Downloading result artifacts
        uses: actions/download-artifact@v3

      - name: Evaluating results
        # This checks if any of the results files are non-empty and fails if one is
        run: |
          for file in ./results-*/results.txt
          do 
            if [ -s $file ]
              then
                echo "Build test failed for $file"
                cat $file
                exit 1
            fi
          done
